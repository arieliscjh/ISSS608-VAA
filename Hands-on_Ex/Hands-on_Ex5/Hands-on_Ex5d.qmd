---
title: "Hands-on_Ex5d"
date: "February 6,2024"
date-modified: "last-modified"
execute: 
  eval: true 
  echo: true
  warning: false
editor: visual 
---

# 15 Visual Multivariate Analysis with Parallel Coordinates Plot

## 15.1 Overview 

Parallel coordinates plot is a data visualisation specially designed for visualising and analysing multivariate, numerical data. It is ideal for comparing multiple variables together and seeing the relationships between them.

This data visualisation technique is more often found in academic and scientific communities than in business and consumer data visualizations.

## 15.2 Loading R packages

```{r}
pacman::p_load(GGally, parallelPlot, tidyverse)
```

## 15.3 Data Preparation

```{r}
wh <- read_csv("data/WHData-2018.csv")
```

## 15.4 Plotting Static Parallel Coordinates Plot

### 15.4.1 Plotting a simple parallel corrdinates 

```{r}
ggparcoord(data = wh, 
           columns = c(7:12))
```

Notice that only two argument namely `data` and `columns` is used. `Data` argument is used to map the data object (i.e. *wh*) and `columns` is used to select the columns for preparing the parallel coordinates plot.

### 15.4.2 Plotting a parallel coordinates with boxplot 

```{r}
ggparcoord(data = wh, 
           columns = c(7:12), 
           groupColumn = 2,
           scale = "uniminmax",
           alphaLines = 0.2,
           boxplot = TRUE, 
           title = "Parallel Coordinates Plot of World Happines Variables")
```

-   `groupColumn` argument is used to group the observations (i.e. parallel lines) by using a single variable (i.e. Region) and colour the parallel coordinates lines by region name.

-   `scale` argument is used to scale the variables in the parallel coordinate plot by using `uniminmax` method. The method univariately scale each variable so the minimum of the variable is zero and the maximum is one.

-   `alphaLines` argument is used to reduce the intensity of the line colour to 0.2. The permissible value range is between 0 to 1.

-   `boxplot` argument is used to turn on the boxplot by using logical `TRUE`. The default is `FALSE`.

-   `title` argument is used to provide the parallel coordinates plot a title.

### 15.4.3 Parallel Coordinates with facet 

Since `ggparcoord()` is developed by extending **ggplot2** package, we can combination use some of the ggplot2 function when plotting a parallel coordinates plot.

```{r}
ggparcoord(data = wh, 
           columns = c(7:12), 
           groupColumn = 2,
           scale = "uniminmax",
           alphaLines = 0.2,
           boxplot = TRUE, 
           title = "Multiple Parallel Coordinates Plots of World Happines Variables by Region") +
  facet_wrap(~ Region)
```

### 15.4.4 Rotating x-axis text label 

```{r}
ggparcoord(data = wh, 
           columns = c(7:12), 
           groupColumn = 2,
           scale = "uniminmax",
           alphaLines = 0.2,
           boxplot = TRUE, 
           title = "Multiple Parallel Coordinates Plots of World Happines Variables by Region") +
  facet_wrap(~ Region) + 
  theme(axis.text.x = element_text(angle = 30))
```

### 15.4.5 Adjusting the rotated x-axis text label 

Rotating x-axis text labels to 30 degrees makes the label overlap with the plot and we can avoid this by adjusting the text location using `hjust` argument to theme\'s text element with `element_text()`. 

```{r}
ggparcoord(data = wh, 
           columns = c(7:12), 
           groupColumn = 2,
           scale = "uniminmax",
           alphaLines = 0.2,
           boxplot = TRUE, 
           title = "Multiple Parallel Coordinates Plots of World Happines Variables by Region") +
  facet_wrap(~ Region) + 
  theme(axis.text.x = element_text(angle = 30, hjust=1))
```

## 15.5 Plotting interactive parallel coordinates plot: Parallelplot method

[**parallelPlot**](https://cran.r-project.org/web/packages/parallelPlot/) is an R package specially designed to plot a parallel coordinates plot by using \'htmlwidgets\' package and [d3.js](https://d3js.org/).

### 15.5.1 The basic plot 

```{r}
wh <- wh %>%
  select("Happiness score", c(7:12))
parallelPlot(wh,
             width = 320,
             height = 250)
```

### 15.5.2 Rotate axis label

```{r}
parallelPlot(wh,
             rotateTitle = TRUE)
```

### 15.5.3 Changing the color scheme 

```{r}
parallelPlot(wh,
             continuousCS = "YlOrRd",
             rotateTitle = TRUE)
```

### 15.5.4 Parallel coordinates plot with histogram

```{r}
histoVisibility <- rep(TRUE, ncol(wh))
parallelPlot(wh,
             rotateTitle = TRUE,
             histoVisibility = histoVisibility)
```
